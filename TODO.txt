Editor
* New custom stuff indexing system to have more convenient usage of customized stuff.
  It's a big work, but in result we will have much more convenient system to manage a custom stuff
- Add re-configurable hot-keys
- Speed-up render of editing scene with forcing of QuadTree usage with escaping usage of QGraphicsScene's update() function!

Engine
- Make global "loaderCallback" function pointer to allow processing of level/world loader screen from side
  without making of separated threads (which is not supported with single OpenGL context while texture loadings are in process)
- Exclamation sign sprite over talkable NPC's
* Fix a bug causes missing of custom lua-scripts declared in the custom npc.txt file

Engine: Lua
- Better Memory Management, either transfere ownership to C++ or use smart pointers.
- setFramePos() NPC Animator function to provide ability jump to any frame position in sequence
- effect-def based effect spawn function to allow easier and flexible way of effect spawning
* Player-LUA events and allow external lua files like npc's are has.

  Player's events function:
   onInit(...)
   onLoop(timeOfTick)
   onContact(physObject)
   onTake(physObject)
   onHarm(harmEvent)
   onKill(killEvent)
   onControl(key)

Engine: New level physics
- Wall adheasing NPCs support
* Walkhable slopes
- Fix staying of NPC's on a top of other flying NPC's
- Kill on crush
* Layer motion engine
  - Use own R-Trees per every layer, register on main R-tree layer itself instead of it's members
- Complex effects scripts interpreter + bind of the effect-def into luna
+ Support of speed-adding of items which makes stack

PGE Manager
- Add getting of actual config packs list and showing up of the config pack info
- Implement downloading & installing of config packs (which is much required for Android and Mac OS X
  and for installer-less PGE packs to be user-friendly)

Common
- Reorganize PGE File Library to use classes with inhereting and polymorphism
- World map layers and events system. Make Action-styled events system NOW!
- Action-styled events for level subsystem
* Completed Read/Write implementation of SMBX-38A file formats support


Completed works
============================================================
Editor
+ "Open Episode folder in explorer" and "Open Custom folder in explorer" actions
+ Add function to refresh warp's entry XY coordninates inside combobox
+ Add "Replace all Item-ID in a current section" feature
+ Provide ability to define NPC's "friendly" flag from message editing dialog
+ Add multi-selection into ItemSelection dialog which needed for some cases
+ Finish incompleted work with garbage NPC clean function which provides removing of a junk NPCs
  spawned by SMBX Editor bug (such a vines and ladders): function anready finds junk NPC's
  but it doesn't removes them. Need to find and delete listed NPCs from scene and store the remove history entry.
+ Add R-Tree from engine into editor to increase performance of collision detection.
+ Improve detector of unused custom data to provide clean-up of unused data.
+ Add per lvl_block/lvl_bgo/lvl_npc/wld_tiles/etc. common grid value
+ Use lvl_characters.ini instead of main.ini to store characters information
+ Make spoilers / scroll-area in the warps box to support view on smaller screens

Engine
+ Raster fonts support
+ Textures support for world map items
+ Playable character and it's state switching support
+ Add loading of NPC configs: copy stuff from editor and replace QImage/QPixmap with a GL Textures.
+ Replace QDialog-based config pack selection box with the own-drawn scene in the SDL Window
+ Replace all pixel per seconds NPC mover speeds with 1/65 second values
+ Detectors API for NPCs

Engine: New level physics
+ R-Tree based physical world inside LevelScene with simple physics. PGE_PhysObj will a physical body
+ Split sense of "scenery" argument to "scenery" and "shared-animation"
+ Text input box to have able type a texts (Cheats, Messages, Save game filename, etc.)
+ Question box

GIFs2PNG
+ Use editor's unmasking code insead of alphachannel
+ Add support of looking for a masks in given data directory.
  (some custom foreground are presented without mask image and uses default mask.
  After conversion those images will be without transparency).

Common
+ Porovide ability to use file formats library with std stuff too (Use macroses to use Qt specific or C++ STD things)

SDL Mixer X
+ Resolve 44100 hz shit with adding separated resampling code

